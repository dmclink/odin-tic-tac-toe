/* #region || MARK: CSS RESET */
*,
*::before,
*::after {
	box-sizing: inherit;
	line-height: calc(1em + 0.5rem);
	padding: 0;
	margin: 0;
}

html {
	font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif,
		'Apple Color Emoji', 'Segoe UI Emoji';
	box-sizing: border-box;
	-webkit-text-size-adjust: 100%;
	tab-size: 4;
}

body {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

input,
button,
textarea,
select {
	font: inherit;
	font-feature-settings: inherit;
	font-variation-settings: inherit;
	letter-spacing: inherit;
	color: inherit;
	border-radius: 0;
	background-color: transparent;
	opacity: 1;
}

button {
	cursor: pointer;
}

img,
picture,
video,
canvas,
svg {
	display: block;
	max-inline-size: 100%;
	max-block-size: 100%;
}

ol,
ul,
menu {
	list-style: none;
	padding-inline: 0;
}

code,
kbd,
samp,
pre {
	font-family: ui-monospace, SFMono-Regular, Consolas, 'Liberation Mono', Menlo,
		monospace;
	font-size: 1em;
}

b,
strong {
	font-weight: bolder;
}

button,
[type='button'],
[type='reset'],
[type='submit'] {
	-webkit-appearance: button;
}

sub,
sup {
	font-size: 75%;
	line-height: 0;
	position: relative;
	vertical-align: baseline;
}
sub {
	bottom: -0.25em;
}
sup {
	top: -0.5em;
}

table {
	border-color: currentcolor;
	border-collapse: collapse;
}

progress {
	vertical-align: baseline;
}

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
	height: auto;
}

[type='search'] {
	-webkit-appearance: textfield;
	outline-offset: -2px;
}

::-webkit-search-decoration {
	-webkit-appearance: none;
}

::-webkit-file-upload-button {
	-webkit-appearance: button;
	font: inherit;
}

summary {
	display: list-item;
}
/* #endregion */

/* MARK: VARIABLES */
:root {
	--line-width: 6px;
	--offset-line-width: calc(var(--line-width) / 2);
}

/* MARK: STYLES */
body {
	background-color: #444;
}

.button {
	font-size: 1.2rem;
	background-color: #444;
	border-radius: 6px;
	padding: 1rem;
	transition: filter 0.03s ease-in, transform 0.03s ease-in;

	&:hover {
		filter: brightness(1.2);
		transform: translate(-1px, -1px);
	}
	&:active {
		filter: brightness(0.9);
		transform: translate(1px, 1px);
	}
}

.header {
	background-color: #333;
	padding: 1rem;
	color: whitesmoke;
	margin-bottom: 2rem;

	.container {
		margin: 0 auto;
		display: grid;
		justify-content: space-between;
		grid-template-columns: 15% 1fr 15%;
		max-width: 50rem;
	}
}

.header__title {
	text-align: center;
	font-size: 3rem;
}

.player-turn {
	color: whitesmoke;
	font-size: 2rem;
	text-align: center;
	margin-bottom: 1rem;
}

.dialog {
	position: relative;
	margin: auto auto 1rem 1rem;
	background-color: #333;
	color: whitesmoke;
	border: 2px solid #555;
	border-radius: 7px;
	padding: 2rem;
	font-size: 1.4rem;
}

.dialog__wrapper {
	display: flex;
	flex-flow: column;
	gap: 1rem;
	align-items: center;
}

.dialog__winner {
	font-size: 2rem;

	&::after {
		content: 'ðŸŽ‰';
	}
	&::before {
		content: 'ðŸŽ‰';
	}
}

/* MARK: BOARD UI */
.board__wrapper {
	background-color: #333;
	padding: 1rem;
	width: min-content;
	border-radius: 15px;
	margin: 0 auto;
	box-shadow: inset 0 0 7px 7px rgb(23, 23, 29);
}

.board {
	border: 2px solid #000;
	display: grid;
	width: min-content;
	grid-template-columns: repeat(3, 100px);
	background-color: whitesmoke;
}

.cell {
	display: block;
	height: 100px;
	width: 100%;
	border: 1px solid #000;
	box-shadow: inset 0 0 3px 3px rgb(153, 152, 159);

	&[data-piece='.'] {
		background-color: transparent;
	}
	&[data-piece='X'] {
		box-shadow: inset 0 0 4px 4px rgb(135, 134, 140);
		background-color: #e8e8e8;
		position: relative;
		&::before {
			content: 'X';
			color: red;
			inset: 0;
			font-size: 70px;
			font-weight: bold;
		}
	}
	&[data-piece='O'] {
		box-shadow: inset 0 0 4px 4px rgb(135, 134, 140);
		background-color: #e8e8e8;
		position: relative;
		&::before {
			content: 'O';
			color: black;
			inset: 0;
			font-size: 70px;
			font-weight: bold;
		}
	}
}

.line {
	position: relative;
	&::after {
		display: block;
		content: '';
		position: absolute;
		background-color: blue;
		z-index: 1;
		left: calc(50% - var(--offset-line-width));
		width: var(--line-width);
	}
	&.horizontal::after {
		top: 0;
		bottom: 0;
		transform: rotate(90deg);
	}
	&.vertical::after {
		top: 0;
		bottom: 0;
	}
	&.diagonal-up::after {
		top: -23%;
		bottom: -23%;
		transform: rotate(45deg);
	}
	&.diagonal-down::after {
		top: -23%;
		bottom: -23%;
		transform: rotate(-45deg);
	}
}
